# how many trees are represented in the cookie df
tree_summary <- cookie %>%
count(tree_ID, name = "count")
trees_greater_than_one <- tree_summary %>%
filter(count > 1)
trees_subset <- tree %>%
filter(tree_ID %in% list)
trees_subset <- trees %>%
filter(tree_ID %in% list)
View(trees_subset)
tree_summary
trees_greater_than_one <- tree_summary %>%
filter(count > 1)
trees_greater_than_one
list <- trees_greater_than_one$tree_ID
trees_subset <- trees %>%
filter(tree_ID %in% list)
trees_subset
View(trees_subset)
trees_greater_than_one
View(trees)
View(tree_damage)
# how many trees are represented in the cookie df
tree_summary <- cookie %>%
count(tree_ID, name = "count") %>%
filter(count > 1)
tree_summary
View(tree_damage)
View(dam_scaled)
# Damage ~ species
mod.A <- lmer(log(mp_damaged_kg) ~ species + (1|site), REML = F, data = frustrum)
Anova(mod.A)
# Damage ~ traits
mod.B <- lmer(log(mp_damaged_kg) ~ dbh_cm + wd + (1|site), REML = F, data = frustrum)
Anova(mod.B)
# merge in presence/absence data for termite/fire presence
tree_damage <- tree_level_damage_myrt[c("tree_site_ID", "site", "termite_pres", "mound", "runway", "termite", "fire")]
frustrum <- left_join(frustrum_agb, tree_damage, by = c("tree_site_ID", "site"))
# Damage ~ species
mod.A <- lmer(log(mp_damaged_kg) ~ species + (1|site), REML = F, data = frustrum)
Anova(mod.A)
# Damage ~ traits
mod.B <- lmer(log(mp_damaged_kg) ~ dbh_cm + wd + (1|site), REML = F, data = frustrum)
Anova(mod.B)
#check_model(mod.B)
dam_dbh <- ggpredict(mod.B, terms = c("dbh_cm", "wd"), back.transform = TRUE)
ggpredict(mod.B, terms = c("dbh_cm", "wd"), back.transform = TRUE) %>% plot(add.data = TRUE)
ggpredict(mod.B, terms = c("dbh_cm", "wd")) %>% plot(add.data = TRUE)
#check_model(mod.B)
dam_dbh <- ggpredict(mod.B, terms = c("dbh_cm", "wd")) #%>% plot(add.data = TRUE)
check_model(mod.B)
Anova(mod.B)
Anova(mod.A)
# Damage ~ external factors
mod.C <- lmer(log(mp_damaged_kg) ~ fire*termite_pres + (1|site), data = frustrum)
Anova(mod.C)
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg))) +
geom_jitter()
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg))) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted)), data=filter(dam_dbh),
inherit.aes=FALSE, colour= low)
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg))) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted+1)), data=filter(dam_dbh),
inherit.aes=FALSE, colour= low)
#check_model(mod.B)
dam_dbh <- ggpredict(mod.B, terms = c("dbh_cm", "wd")) #%>% plot(add.data = TRUE)
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg))) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted)), data=filter(dam_dbh),
inherit.aes=FALSE, colour= low)
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg))) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted)), data=filter(dam_dbh),
inherit.aes=FALSE, colour= low) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)), data=filter(dam_dbh),
inherit.aes=FALSE,  alpha=0.2, fill = low)
ggplot(frustrum, aes(x = dbh_cm, y = (mp_damaged_kg))) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted)), data=filter(dam_dbh),
inherit.aes=FALSE, colour= low) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)), data=filter(dam_dbh),
inherit.aes=FALSE,  alpha=0.2, fill = low)
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg))) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh),
inherit.aes=FALSE, colour= low) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh),
inherit.aes=FALSE,  alpha=0.2, fill = low)+
theme_classic() +
xlab("Tree DBH (cm)") +
ylab("Total damaged biomass in lower stem (kg)")
ggpredict(mod.B, terms = c("dbh_cm", "wd")) %>% plot(add.data = TRUE)
#check_model(mod.B)
dam_dbh <- ggpredict(mod.B, terms = c("dbh_cm", "wd"))# %>% plot(add.data = TRUE)
dam_dbh
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg))) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE, colour= low)
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg))) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE, colour= low) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE,  alpha=0.2, fill = low)
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg))) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE, colour= low) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE,  alpha=0.2, fill = low)+
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.8453'),
inherit.aes=FALSE, colour= mid) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.8453'),
inherit.aes=FALSE,  alpha=0.2, fill = mid)
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg))) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE, colour= low) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE,  alpha=0.2, fill = low)+
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.8453'),
inherit.aes=FALSE, colour= mid) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.8453'),
inherit.aes=FALSE,  alpha=0.2, fill = mid) +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.977'),
inherit.aes=FALSE, colour= high) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.977'),
inherit.aes=FALSE,  alpha=0.2, fill = high)
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg), color = dbh)) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE, colour= low)
View(frustrum)
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg), color = wd)) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE, colour= low) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE,  alpha=0.2, fill = low)
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg), color = wd)) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE, colour= low) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE,  alpha=0.2, fill = low)+
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.8453'),
inherit.aes=FALSE, colour= mid) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.8453'),
inherit.aes=FALSE,  alpha=0.2, fill = mid) +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.977'),
inherit.aes=FALSE, colour= high) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.977'),
inherit.aes=FALSE,  alpha=0.2, fill = high) +
theme_classic() +
xlab("Tree DBH (cm)") +
ylab("Total damaged biomass in lower stem (kg)")
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg), color = wd)) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE, colour= low) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE,  alpha=0.2, fill = low)+
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.8453'),
inherit.aes=FALSE, colour= mid) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.8453'),
inherit.aes=FALSE,  alpha=0.2, fill = mid) +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.977'),
inherit.aes=FALSE, colour= high) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.977'),
inherit.aes=FALSE,  alpha=0.2, fill = high) +
theme_classic() +
scale_color_manual(values = custom_colors) +
xlab("Tree DBH (cm)") +
ylab("Total damaged biomass in lower stem (kg)")
str(frustrum$wd)
frustrum$wd <- as.factor(frustrum$wd)
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg), color = wd)) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE, colour= low) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE,  alpha=0.2, fill = low)+
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.8453'),
inherit.aes=FALSE, colour= mid) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.8453'),
inherit.aes=FALSE,  alpha=0.2, fill = mid) +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.977'),
inherit.aes=FALSE, colour= high) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.977'),
inherit.aes=FALSE,  alpha=0.2, fill = high) +
theme_classic() +
scale_color_manual(values = custom_colors) +
xlab("Tree DBH (cm)") +
ylab("Total damaged biomass in lower stem (kg)")
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg), color = wd)) +
geom_jitter()
custom_colors_wd <- c("0.7405" = "#a3dfba", "0.8453" = "#347aa3", "0.977" = "#1f1120")
ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg), color = wd)) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE, colour= low) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE,  alpha=0.2, fill = low)+
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.8453'),
inherit.aes=FALSE, colour= mid) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.8453'),
inherit.aes=FALSE,  alpha=0.2, fill = mid) +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.977'),
inherit.aes=FALSE, colour= high) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.977'),
inherit.aes=FALSE,  alpha=0.2, fill = high) +
theme_classic() +
scale_color_manual(values = custom_colors_wd) +
xlab("Tree DBH (cm)") +
ylab("Total damaged biomass in lower stem (kg)")
(sp+tr) / (term+fire) + plot_annotation(tag_levels = "a")
sp <- ggplot(frustrum, aes(x = species, y = mp_damaged_kg, fill = species))+
geom_boxplot()+
theme_classic()+
scale_fill_manual(values = custom_colors)+
scale_x_discrete(labels = c("C. clarksoniana", "E. cullenii", "M. stenostachya")) +
xlab("") +
ylab("Total damaged biomass in lower stem (kg)")+
theme(legend.position = "none")
# Damage ~ traits
tr <- ggplot(frustrum, aes(x = dbh_cm, y = log(mp_damaged_kg), color = wd)) +
geom_jitter() +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE, colour= low) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.7405'),
inherit.aes=FALSE,  alpha=0.2, fill = low)+
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.8453'),
inherit.aes=FALSE, colour= mid) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.8453'),
inherit.aes=FALSE,  alpha=0.2, fill = mid) +
geom_line(aes(x=x, y=log(predicted)),
data=filter(dam_dbh, group=='0.977'),
inherit.aes=FALSE, colour= high) +
geom_ribbon(aes(x=x, ymin=log(conf.low), ymax=log(conf.high)),
data=filter(dam_dbh, group=='0.977'),
inherit.aes=FALSE,  alpha=0.2, fill = high) +
theme_classic() +
scale_color_manual(values = custom_colors_wd) +
xlab("Tree DBH (cm)") +
ylab("Total damaged biomass in lower stem (kg)")
# Damage ~ external factors
term <- ggplot(frustrum, aes(x = termite_pres, y = mp_damaged_kg, fill = termite_pres))+
geom_boxplot()+
theme_classic() +
xlab("External termite presence") +
ylab("Total damaged biomass in lower stem (kg)")+
theme(legend.position = "none")+
scale_fill_manual(values = colors)
fire <- ggplot(frustrum, aes(x = fire, y = mp_damaged_kg, fill = fire))+
geom_boxplot()+
theme_classic() +
xlab("External fire scarring") +
ylab("Total damaged biomass in lower stem (kg)")+
theme(legend.position = "none")+
scale_fill_manual(values = colors)
(sp+tr) / (term+fire) + plot_annotation(tag_levels = "a")
myrt$termite_num <- ifelse(myrt$termite_pres == "Y", 1, 0)
myrt$mound_num <- ifelse(myrt$mound == "Y", 1, 0)
myrt$runway_num <- ifelse(myrt$runway == "Y", 1, 0)
myrt$termitesampled_num <- ifelse(myrt$termite == "Y", 1, 0)
myrt$fire_num <- ifelse(myrt$fire == "Y", as.integer(1), as.integer(0))
# model - DBH
myrt %>%
group_by(tree_site_ID, species, site) %>%
distinct(dbh_cm.x, wd, fire_num, termite_num, mound_num, runway_num, termitesampled_num)-> pp
# external damage ~ species (chi square)
pp$termite_num <- as.factor(pp$termite_num)
pp$fire_num <- as.factor(pp$fire_num)
# external damage ~ species
ggplot(pp, aes(x = species, fill = termite_num))+
geom_bar(position = "dodge")+
theme_classic()+
labs(x = "Species", y = "Count", fill = "External Termite Presence") +
scale_fill_manual(values = c("0" = "red", "1" = "blue"), labels = c("Absent", "Present"))
data <- data.frame(
species = rep(c("Species1", "Species2", "Species3"), each = 50),
termite_presence = c(rbinom(50, 1, 0.3), rbinom(50, 1, 0.5), rbinom(50, 1, 0.7))
)
View(data)
table(pp$species, pp$termite_num)
contingency_table_term <- table(pp$species, pp$termite_num)
contingency_table_term
chi_term <- chisq.test(contingency_table_term, correct = TRUE)
chi_term
fisher.test(contingency_table_term)
contingency_table_fire <- table(pp$species, pp$fire_num)
contingency_table_fire
chi_term <- chisq.test(contingency_table_fire, correct = TRUE)
chi_fire <- chisq.test(contingency_table_fire, correct = TRUE)
chi_fire
ggplot(pp, aes(x = species, fill = termite_num))+
geom_bar(position = "dodge")+
theme_classic()+
labs(x = "Species", y = "Count", fill = "External Termite Presence") +
scale_fill_manual(values = c("0" = mid, "1" = low), labels = c("Absent", "Present"))
ggplot(pp, aes(x = species, fill = fire_num))+
geom_bar(position = "dodge")+
theme_classic()+
labs(x = "Species", y = "Count", fill = "External Fire Scarring") +
scale_fill_manual(values = c("0" = mid, "1" = low), labels = c("Absent", "Present"))
# external damage ~ species
fig5_a <- ggplot(pp, aes(x = species, fill = termite_num))+
geom_bar(position = "dodge")+
theme_classic()+
labs(x = "Species", y = "Count", fill = "External Termite Presence") +
scale_fill_manual(values = c("0" = mid, "1" = low), labels = c("Absent", "Present"))
fig5_b <- ggplot(pp, aes(x = species, fill = fire_num))+
geom_bar(position = "dodge")+
theme_classic()+
labs(x = "Species", y = "Count", fill = "External Fire Scarring") +
scale_fill_manual(values = c("0" = mid, "1" = low), labels = c("Absent", "Present"))
fig5_a + fig5_b + term_dbh + term_wd + patchwork::plot_annotation(tag_levels = "a")
ggplot(pp, aes(x = species, fill = termite_num))+
geom_bar(position = "dodge")+
theme_classic()+
labs(x = "Species", y = "Count", fill = "External Termite Presence") +
scale_fill_manual(values = c("0" = mid, "1" = low), labels = c("Absent", "Present")) +
scale_x_discrete(labels = c("C. clarksoniana", "E. cullenii", "M. stenostachya"))
fig5_a <- ggplot(pp, aes(x = species, fill = termite_num))+
geom_bar(position = "dodge")+
theme_classic()+
labs(x = "Species", y = "Count", fill = "External Termite Presence") +
scale_fill_manual(values = c("0" = mid, "1" = low), labels = c("Absent", "Present")) +
scale_x_discrete(labels = c("C. clarksoniana", "E. cullenii", "M. stenostachya"))
fig5_b <- ggplot(pp, aes(x = species, fill = fire_num))+
geom_bar(position = "dodge")+
theme_classic()+
labs(x = "Species", y = "Count", fill = "External Fire Scarring") +
scale_fill_manual(values = c("0" = mid, "1" = low), labels = c("Absent", "Present")) +
scale_x_discrete(labels = c("C. clarksoniana", "E. cullenii", "M. stenostachya"))
fig5_a + fig5_b + term_dbh + term_wd + patchwork::plot_annotation(tag_levels = "a")
ggpredict(mod.B, terms = c("dbh_cm", "wd")) %>% plot(add.data = TRUE)
#summary(term_wd)
Anova(term_wd)
term_dbh <- glm(termite_num ~ dbh_cm.x, data = pp, family = binomial(logit))
#summary(term_dbh)
Anova(term_dbh)
term_wd <- glm(termite_num ~ wd , data = pp, family = binomial("logit"))
#summary(term_wd)
Anova(term_wd)
fire_dbh <- glm(fire_num ~ dbh_cm.x, data = pp, family = binomial(logit))
#summary(fire_dbh)
Anova(fire_dbh)
fire_wd <- glm(fire_num ~ wd , data = pp, family = binomial("logit"))
summary(fire_wd)
Anova(fire_wd)
a
b
c
# external damage ~ traits
term_dbh <- ggplot(pp, aes(x = dbh_cm.x, y =  termite_num))+
geom_point()+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = TRUE, color = "black")+
theme_classic()+
xlab("DBH (cm)")+
ylab("Termite presence")
term_wd <- ggplot(pp, aes(x = wd, y =  termite_num))+
geom_point()+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = TRUE, color = "black")+
theme_classic()+
xlab("Wood density (g/cm3)")+
ylab("Termite presence")
fig5_a + fig5_b + term_dbh + term_wd + patchwork::plot_annotation(tag_levels = "a")
ggplot(pp, aes(x = wd, y =  termite_num))+
geom_point()+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = TRUE, color = low)+
theme_classic()+
xlab("Wood density (g/cm3)")+
ylab("Termite presence")
# external damage ~ species (chi square)
pp$termite_num <- as.factor(pp$termite_num)
pp$fire_num <- as.factor(pp$fire_num)
ggplot(pp, aes(x = wd, y =  termite_num))+
geom_point()+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = TRUE, color = low)+
theme_classic()+
xlab("Wood density (g/cm3)")+
ylab("Termite presence")
pp$termite_num <- as.numeric(pp$termite_num)
pp$fire_num <- as.numeric(pp$fire_num)
ggplot(pp, aes(x = dbh_cm.x, y =  termite_num))+
geom_point()+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = TRUE, color = low)+
theme_classic()+
xlab("DBH (cm)")+
ylab("Termite presence")
# binomial model - define coding
myrt$termite_num <- ifelse(myrt$termite_pres == "Y", 1, 0)
myrt$mound_num <- ifelse(myrt$mound == "Y", 1, 0)
myrt$runway_num <- ifelse(myrt$runway == "Y", 1, 0)
myrt$termitesampled_num <- ifelse(myrt$termite == "Y", 1, 0)
myrt$fire_num <- ifelse(myrt$fire == "Y", as.integer(1), as.integer(0))
myrt %>%
group_by(tree_site_ID, species, site) %>%
distinct(dbh_cm.x, wd, fire_num, termite_num, mound_num, runway_num, termitesampled_num)-> pp
# external damage ~ traits
term_dbh <- glm(termite_num ~ dbh_cm.x, data = pp, family = binomial(logit))
#summary(term_dbh)
Anova(term_dbh)
ggpredict(term_dbh, terms = c("dbh_cm.x"))  %>% plot(add.data = TRUE)
term_wd <- glm(termite_num ~ wd , data = pp, family = binomial("logit"))
#summary(term_wd)
Anova(term_wd)
ggpredict(term_wd, terms = c("wd")) %>% plot(add.data = TRUE)
ggplot(pp, aes(x = dbh_cm.x, y =  termite_num))+
geom_point()+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = TRUE, color = low)+
theme_classic()+
xlab("DBH (cm)")+
ylab("Termite presence")
# external damage ~ traits
term_dbh <- ggplot(pp, aes(x = dbh_cm.x, y =  termite_num))+
geom_point()+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = TRUE, color = "black")+
theme_classic()+
xlab("DBH (cm)")+
ylab("Termite presence")
term_wd <- ggplot(pp, aes(x = wd, y =  termite_num))+
geom_point()+
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = TRUE, color = "black")+
theme_classic()+
xlab("Wood density (g/cm3)")+
ylab("Termite presence")
fig5_a + fig5_b + term_dbh + term_wd + patchwork::plot_annotation(tag_levels = "a")
# viz
# merge cookie  and tree level df
merged_long <- rbind(cookie_chi_long, trees_chi_long)
freq_summary <- data.frame(table(merged_long))
freq_summary$proportion <- ifelse(freq_summary$scale == "cookie", freq_summary$Freq/200, freq_summary$Freq/63)
ggplot(freq_summary, aes(x = scale , y = proportion, fill = damage))+
geom_bar(stat = "identity", position = "stack")+
theme_classic()
all <- read.csv("/Users/abbeyyatsko/Desktop/repos/ironrange/data/Iron_Range_Stem_Damage_master_June_06_23.xlsx - all.csv")
all <- all[, c('ply_model', 'species', 'obs_ABG_dry_kg')]
all <- all[complete.cases(all), ]
#result1 <- all[all$ply_model %like% "AM3", ]
totbiomass <- sum(all$obs_ABG_dry_kg)
out <- all %>% group_by(species) %>%
summarize(total_biomass = sum(obs_ABG_dry_kg),
perc_biomass = sum(obs_ABG_dry_kg)/totbiomass*100,
n = n())
out
alltermites$location <- as.factor(alltermites$location)
ggplot(tree_termites, aes(x = position,  fill = species))+
geom_bar(stat = "count") +
scale_x_discrete(limits = c("S", "A", "TOP"), labels = c("Scarf", "First branching point","Canopy"))+
xlab("Damage type")+
ylab("Count")+
scale_fill_brewer()+
theme_classic()
View(tree_termites)
View(alltermites)
ggplot(alltermites, aes(fill=species_organized, x=niche)) +
geom_bar(position="stack", stat="count")+
scale_fill_brewer(palette="Reds")+
theme_classic()
ggplot(alltermites, aes(fill=species_organized, x=niche)) +
geom_bar(position="stack", stat="count")
